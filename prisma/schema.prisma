// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  nrc          String        @unique
  address      String?
  phone        String?
  role         Role          @default(USER)
  reservations Reservation[]

  @@map("users")
}

model Vehicle {
  id            String        @id @default(uuid())
  brand         String
  model         String
  price         Int
  image         String
  description   String
  status        VehicleStatus @default(available)
  reservation   Reservation?  @relation(fields: [reservationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  reservationId String?
  visibible     Boolean       @default(false)

  @@map("vehicles")
}

model Reservation {
  id              String    @id @default(uuid())
  User            User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId          String
  vehicles        Vehicle[]
  city            String
  reservationDate DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("reservations")
}

enum Role {
  USER
  ADMIN
}

enum VehicleStatus {
  available
  reserved
}
